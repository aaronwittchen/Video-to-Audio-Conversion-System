[tool:pytest]
# Test discovery configuration
testpaths = testing
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80

# Test markers for categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    registration: marks tests as registration tests
    login: marks tests as login tests
    health: marks tests as health check tests
    database: marks tests as database utility tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    password: marks tests as password-related tests
    jwt: marks tests as JWT-related tests
    endpoint: marks tests as endpoint tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution (if pytest-xdist is installed)
# addopts = --numprocesses=auto

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */testing/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test output configuration
[tool:pytest.ini_options]
console_output_style = progress 